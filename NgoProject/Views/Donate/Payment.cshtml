@model NgoProject.Models.Donate
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://www.paypalobjects.com/api/checkout.js"></script>

<section class="donate-section">
    <div class="section-overlay"></div>
    <div class="container">
        <div class="row">

            <div class="col-lg-6 col-12 mx-auto">
                <form class="custom-form donate-form" asp-controller="Donate" asp-action="AddDonate" method="post" role="form">

                    <div class="row">
                        @*                        <div class="col-lg-12 col-12">
                        <select class="col-lg-6 col-12 mx-auto"> <option>123</option> </select>

                        </div>*@


                        <div class="col-lg-12 col-12 form-check-group">
                            <div class="input-group">
                                <span class="input-group-text" id="basic-addon1">$</span>
                                <input type="text" id="data1" onchange="showData()" class="form-control" placeholder="Enter Your An Amount" aria-label="Username" aria-describedby="basic-addon1" />

                                <p id="price" hidden></p>

                            </div>
                        </div>

                        <div class="col-lg-12 col-12 mt-2">



                            <div id="paypal-button-container"> </div>
                        </div>
                    </div>
                </form>

            </div>

        </div>
    </div>
</section>


<script>
    paypal.Button.render({

        env: 'sandbox',

        client: {
            sandbox: 'AZ9nqTq7oGlERRbqCSATXMbJFqJ7A6XL2m-56gKWeKhsCJQ3fDPWOwa7Ri4hCHa6IqICEIL6ty81JNaC',
            production: '<insert production client id>'
        },
        // Show the buyer a 'Pay Now' button in the checkout flow
        commit: true,

        // payment() is called when the button is clicked
        payment: function (data, actions) {

            // Make a call to the REST api to create the payment
            return actions.payment.create({
                payment: {
                    transactions: [
                        {
                            amount: {
                                total: parseFloat(document.getElementById('price').textContent).toString(), currency: 'USD'
                            }
                        }
                    ]
                }
            });
        },

        // onAuthorize() is called when the buyer approves the payment
        onAuthorize: function (data, actions) {

            // Make a call to the REST api to execute the payment
            return actions.payment.execute().then(function () {
                window.alert('Payment Complete!');
            });
        }

    }, '#paypal-button-container');

    function showData() {
        var data1 = document.getElementById("data1").value;
        document.getElementById("price").innerHTML = data1;
    }
</script>

